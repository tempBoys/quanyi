<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.tempBoys.quanyi"
    android:versionCode="1"
    android:versionName="1.0.0" > <!-- End Pushy Permissions -->
    <uses-sdk
        android:minSdkVersion="16"
        android:targetSdkVersion="30" />
    <!--
         Flutter needs it to communicate with the running application
         to allow setting breakpoints, to provide hot reload, etc.
    -->
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />

    <application
        android:appComponentFactory="androidx.core.app.CoreComponentFactory"
        android:debuggable="true"
        android:icon="@mipmap/ic_launcher"
        android:label="quanyi" >
        <activity
            android:name="com.example.quanyi.MainActivity"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:hardwareAccelerated="true"
            android:launchMode="singleTop"
            android:theme="@style/LaunchTheme"
            android:windowSoftInputMode="adjustResize" >

            <!--
                 Specifies an Android theme to apply to this Activity as soon as
                 the Android process has started. This theme is visible to the user
                 while the Flutter UI initializes. After that, this theme continues
                 to determine the Window background behind the Flutter UI.
            -->
            <meta-data
                android:name="io.flutter.embedding.android.NormalTheme"
                android:resource="@style/NormalTheme" />
            <!--
                 Displays an Android View that continues showing the launch screen
                 Drawable until Flutter paints its first frame, then this splash
                 screen fades out. A splash screen is useful to avoid any visual
                 gap between the end of Android's launch screen and the painting of
                 Flutter's first frame.
            -->
            <meta-data
                android:name="io.flutter.embedding.android.SplashScreenDrawable"
                android:resource="@drawable/launch_background" />

            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <!--
             Don't delete the meta-data below.
             This is used by the Flutter tool to generate GeneratedPluginRegistrant.java
        -->
        <meta-data
            android:name="flutterEmbedding"
            android:value="2" />

        <!-- Pushy Declarations -->


        <!-- Internal Notification Receiver -->
        <!-- Do not modify - internal BroadcastReceiver that sends notifications to your Flutter app -->
        <receiver
            android:name="me.pushy.sdk.flutter.internal.PushyInternalReceiver"
            android:exported="false" >
            <intent-filter>

                <!-- Do not modify this -->
                <action android:name="pushy.me" />
            </intent-filter>
        </receiver>

        <!-- Pushy Update Receiver -->
        <!-- Do not modify - internal BroadcastReceiver that restarts the listener service -->
        <receiver
            android:name="me.pushy.sdk.receivers.PushyUpdateReceiver"
            android:exported="false" >
            <intent-filter>
                <action android:name="android.intent.action.MY_PACKAGE_REPLACED" />
            </intent-filter>
        </receiver>

        <!-- Pushy Boot Receiver -->
        <!-- Do not modify - internal BroadcastReceiver that restarts the listener service -->
        <receiver
            android:name="me.pushy.sdk.receivers.PushyBootReceiver"
            android:exported="false" >
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
            </intent-filter>
        </receiver>

        <!-- Pushy Socket Service -->
        <!-- Do not modify - internal service -->
        <service
            android:name="me.pushy.sdk.services.PushySocketService"
            android:stopWithTask="false" />

        <!-- Pushy Job Service (added in Pushy SDK 1.0.35) -->
        <!-- Do not modify - internal service -->
        <service
            android:name="me.pushy.sdk.services.PushyJobService"
            android:permission="android.permission.BIND_JOB_SERVICE"
            android:stopWithTask="false" />

        <!-- End Pushy Declarations -->
        <provider
            android:name="com.sangcomz.fishbun.FishBunFileProvider"
            android:authorities="com.tempBoys.quanyi.fishbunfileprovider"
            android:exported="false"
            android:grantUriPermissions="true" >
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/provider_paths" />
        </provider>

        <activity
            android:name="com.sangcomz.fishbun.ui.album.AlbumActivity"
            android:label="@string/album"
            android:theme="@style/FishBunTheme" />
        <activity
            android:name="com.sangcomz.fishbun.ui.picker.PickerActivity"
            android:theme="@style/FishBunTheme" />
        <activity
            android:name="com.sangcomz.fishbun.ui.detail.DetailActivity"
            android:theme="@style/DetailViewTheme" />
    </application>

</manifest>